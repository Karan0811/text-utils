{"version":3,"sources":["components/NavBar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","mode","style","backgroundColor","href","title","type","id","color","onClick","toogleMode","htmlFor","TextForm","useState","text","setText","word","setWord","time","setTime","heading","value","onChange","event","target","filtered","split","filter","index","arr","length","rows","newText","toUpperCase","showAlert","setTimeout","setAlert","toLowerCase","Alert","alert","role","message","defaultProps","App","setMode","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cf9e90f0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import {\r\n//   Link\r\n// } from \"react-router-dom\";\r\nexport default function NavBar(props) {\r\n  return (\r\n    <>\r\n      <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className='container-fluid' style={{backgroundColor : props.mode === 'dark' ? 'black' : 'white'}} >\r\n          <a className='navbar-brand' href='/'>\r\n            {props.title}\r\n          </a>\r\n          <button\r\n            className='navbar-toggler'\r\n            type='button'\r\n            data-bs-toggle='collapse'\r\n            data-bs-target='#navbarSupportedContent'\r\n            aria-controls='navbarSupportedContent'\r\n            aria-expanded='false'\r\n            aria-label='Toggle navigation'\r\n          >\r\n            <span className='navbar-toggler-icon'></span>\r\n          </button>\r\n          <div className='collapse navbar-collapse' id='navbarSupportedContent'>\r\n            <ul className='navbar-nav me-auto mb-2 mb-lg-0'>\r\n              <li className='nav-item'>\r\n              <a className='nav-link active' aria-current='page' href='/'>\r\n                  Home\r\n                </a>\r\n                {/* <Link className='nav-link active' aria-current='page' to='/'>\r\n                  Home\r\n                </Link> */}\r\n              </li>\r\n              {/* <li className='nav-item'>\r\n                <Link className='nav-link' to='/about'>\r\n                  About Us\r\n                </Link>\r\n              </li> */}\r\n            </ul>\r\n            <form className='d-flex'>\r\n            <div className=\"form-check form-switch\" style={{backgroundColor : props.mode === 'dark' ? 'black' : 'white',color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" onClick = {props.toogleMode}/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n</div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n\r\n    </>\r\n  );\r\n}\r\n\r\nNavBar.propTypes = {\r\n    title: PropTypes.string\r\n  };\r\n\r\n  NavBar.defaultProps = {\r\n    title: 'Enter Title'\r\n};","import React from 'react';\r\nimport { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const [text,setText] = useState(\"\")\r\n    const [word,setWord] = useState(0)\r\n    const [time,setTime] = useState(0)\r\n    \r\n    // const [letter,setLetter] = useState(text.length)\r\n\r\n    let changeToUpperCase = () => {\r\n        let newText = text.toUpperCase()\r\n        setText(newText)\r\n        props.showAlert(\"Upper Case Done\",'success')\r\n        setTimeout(() => {\r\n          props.setAlert(null)\r\n        }, 1500);\r\n    }\r\n    let changeToLowerCase = () => {\r\n        let newText = text.toLowerCase()\r\n        setText(newText)\r\n        props.showAlert(\"Lower Case Done\",'success')\r\n        setTimeout(() => {\r\n          props.setAlert(null)\r\n        }, 1500);\r\n    }\r\n    let clearText = () => {\r\n      setText('')\r\n      setWord(0)\r\n      setTime(0)\r\n      props.showAlert(\"Clear Text Done\",'success')\r\n      setTimeout(() => {\r\n        props.setAlert(null)\r\n      }, 1500);\r\n  }\r\n    let handleChange = (event) => {\r\n        let text = event.target.value\r\n        setText(text)\r\n        let wordLength = (text.split(' '))\r\n        var filtered = wordLength.filter(function(value, index, arr){ \r\n          return value !== '';\r\n      });\r\n        // setLetter(letterLength)\r\n        setWord(filtered.length)\r\n        setTime((filtered.length) * 0.008)\r\n    }\r\n  return (\r\n    <>\r\n    <div className=\"container\">\r\n    <h1 style={{color : props.mode === 'dark' ? 'white' : 'black'}}>{props.heading}</h1>\r\n      <div className='mb-3'>\r\n        <textarea\r\n        value={text}\r\n        style={{backgroundColor : props.mode === 'dark' ? '#080058' : 'white',color:props.mode === 'dark' ? 'white' : 'black'}}\r\n        onChange={handleChange}\r\n          className='form-control'\r\n          id='exampleFormControlTextarea1'\r\n          rows='8'\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={changeToUpperCase}>UpperCase</button>\r\n      <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={changeToLowerCase}>LowerCase</button>\r\n      <button type=\"button\" className=\"btn btn-primary\" onClick={clearText}>Clear Text</button>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n      <p>Word Count = {word}</p>\r\n      <p>Letter Count = {(text).length}</p>\r\n      <p>Time to Read = {time}</p>\r\n      </div>\r\n      <div className=\"container my-3\" style={{color : props.mode === 'dark' ? 'white' : 'black'}}>\r\n      <h3>\r\n          Preview Text\r\n      </h3>\r\n      <p>{text}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    \r\n    return (\r\n        props.alert && <div className=\"alert alert-warning alert-dismissible fade show\" role=\"alert\">\r\n    <strong>{props.alert.type}</strong> : {props.alert.message}\r\n    </div>\r\n\r\n    )\r\n}\r\n","import './App.css';\n// import AboutUs from './components/AboutUs';\nimport NavBar from './components/NavBar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react'\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  \n  let showAlert = (message,type) => {\n    setAlert({\n      message:message,\n      type:type\n    })\n  }\n  let toogleMode = () => {\n    if(mode === 'dark'){\n      setMode('light')\n      document.body.style.backgroundColor = 'white'\n      showAlert(\"Light Mode Activated\",'success')\n      setTimeout(() => {\n        setAlert(null)\n      }, 1500);\n    }\n    else{\n      setMode('dark')\n      document.body.style.backgroundColor = '#080058'\n      showAlert(\"Dark Mode Activated\",'success')\n      setTimeout(() => {\n        setAlert(null)\n      }, 1500);\n    }\n  }\n  return (\n    <>\n      {/* <Router> */}\n      <NavBar title='Text-Utils' mode={mode} toogleMode = {toogleMode}/>\n      <Alert alert = {alert}/>\n      <div className='container'>\n      {/* <Switch>\n          <Route exact path=\"/about\">\n            <AboutUs />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm heading='Enter Your Text' mode={mode} showAlert = {showAlert} setAlert = {setAlert}/>\n          {/* </Route>\n        </Switch> */}\n      {/* <AboutUs/> */}\n      </div>\n      {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}